1) use publicly available xpptut test data to create unit tests
	a) how to visualize data comparison?

2) make quick start options for publicly available data.  what exactly does this look like?
	a) make a unique config file for each experiment

3) streamline the config generator.

4) have the config generator update as opposed to rewrite existing config file.

5) have config generator save existing configuration before rewriting.

5) streamline intitial passes for attm eigen backgrounds and acqiris eigen decomposition.

6) make acqiris eigen decomposition able to get white reference line.  (the recusrive svd doesn't accurate capture that. pca would capture it, but it wouldn't change positions. 
	a) potential solution is to do svd on averages of 100 acqiris traces instead of on every trace. this is not elegant since it introduces another arbitrary tuning parameter.
	b) could mask out regions of svd that only contain noise.

7) make recursive svd parallelizable. I guess it is already. ok, then condense h5 output into a single useful file. merge svd from multiple cores into single core.

8) setup jupyter examples to demonstrate how to use

9) script for setting up user .bashrc to source psconda and link their home to their experiments so jupyter can find it.

10) auto detector which config... for slow vs fast cameras? 

11) how to manage non-meaningful-core-number is h5?

12) initialization for analysisFunctions.py.  Zach and Teddy said something about class initialization

13) conditional IPython.embed() that can be turned off once the function is fine tuned.  E.g. for determining the roi of the system

14) added mask to acq eigen maker and made hsd compatible. this is cludge and will break when hsd has two channels

15) need to add mask to acq eigen analysis

16) for svd mask maker, use argsort on averaged waveform

__check__ 17) generic acqiris analyzer was failing for sxrlr0716. need to figure out why. also add option for integration

18) add daq config to summarizier softXRayDataAndControls/myAnalysisTools/reference_notes

19) add rank to detector object. (done for some previous users. will allow for mpi collect on ffb nodes for hit finding)
MPIDataSource('exp=sxrx22915:run='+runnum+':smd:dir=/reg/d/ffb/sxr/sxrx22915/xtc:live')

